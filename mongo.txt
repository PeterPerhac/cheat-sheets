#to export a collection into a JSON formatted file
mongoexport --db test --collection traffic --out traffic.json

#import data from json into a collection with this shell script:
cd "$(dirname "$0")"
echo 'This will clear out your current collection. Kill me while you can (or just press Enter)'
read
mongo --eval 'db.urls.remove({})' databaseName
mongoimport --db databaseName --collection collectionName --file data.json
echo 'Done.'

#to group documents by the "reg" field, and order them by count descending and reg ascending
db.getCollection('readings').aggregate([
        { $group: { _id: "$reg", count: { $sum: 1 } } },
        { $sort: { count: -1, _id: 1 } }
])

Mongo RESTORE DUMP IMPORT EXPORT
=========

mongorestore --gzip --archive=stub-data-20190104.gz --db voa-modernised-api-stub
mongodump --gzip --archive=stub-data-20190104.gz --db voa-modernised-api-stub



view your local mongo log on mac: `vim /usr/local/var/log/mongodb/mongo.log`

to edit mongo conf file on mac run this
```
vim /usr/local/etc/mongod.conf
```

to increase number of possible connections, add this line to the net: section
  maxIncomingConnections: 2048
but before you do this, check that maxIncomingConnections is actually a problem. you can do so by connecting to the mongod instance and querying the current connections status of the server:

```bash
mongo
db.serverStatus().connections
exit
```


drop all mongo databases with 'test-' prefix in name

```
var dbs = db.getMongo().getDBNames()
for(var i in dbs){
    db = db.getMongo().getDB( dbs[i] );
    if (db.getName().startsWith('test-'))
    {
        db.dropDatabase();
    }
}
```
